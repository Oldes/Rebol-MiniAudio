name: 'Rebol-MiniAudio CI'
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  windows:
    runs-on: windows-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install Siskin Builder
      uses: oldes/install-siskin@v0.10.4

    - name: Build 32bit Rebol/MiniAudio extension
      run: ./siskin Rebol-MiniAudio.nest miniaudio-windows-x86.rebx

    - name: Prepare 32bit Rebol/MiniAudio extension
      run:  MOVE ./build/miniaudio-windows-x86.rebx ./miniaudio-windows-x86.rebx

    - name: Build 64bit Rebol/MiniAudio extension
      run: ./siskin Rebol-MiniAudio.nest miniaudio-windows-x64.rebx

    - name: Prepare 64bit Rebol/MiniAudio extension
      run:  MOVE ./build/miniaudio-windows-x64.rebx ./miniaudio-windows-x64.rebx

    - name: Install Rebol for extension test
      uses: oldes/install-rebol@v3.13.0
      with:
        product: Bulk

    - name: Minimal Rebol/MiniAudio extension test
      run:  ./rebol3 ci-test.r3

    - uses: actions/upload-artifact@v3
      with:
        name: Rebol-MiniAudio-CI-${{github.run_id}}
        path: ./*.rebx

  linux:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install Siskin Builder
      uses: oldes/install-siskin@v0.10.4

    - name: Build 64bit Rebol/MiniAudio extension
      run: ./siskin Rebol-MiniAudio.nest miniaudio-linux-x64

    - name: Prepare 64bit Rebol MiniAudio extension
      run:  mv ./build/miniaudio-linux-x64.so ./miniaudio-linux-x64.rebx

    - name: Install Rebol for extension test
      uses: oldes/install-rebol@v3.13.0
      with:
        product: Bulk

    - name: Minimal Rebol/MiniAudio extension test
      run:  ./rebol3 ci-test.r3

    - name: Compress 64bit Rebol/MiniAudio extension
      run:  gzip -9 ./miniaudio-linux-x64.rebx

    - uses: actions/upload-artifact@v3
      with:
        name: Rebol-MiniAudio-CI-${{github.run_id}}
        path: ./*.gz

  macos:
    runs-on: macos-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install Siskin Builder
      uses: oldes/install-siskin@v0.10.4

    - name: Build 64bit Rebol/MiniAudio extension
      run: ./siskin Rebol-MiniAudio.nest miniaudio-macos-x64

    - name: Prepare 64bit Rebol MiniAudio extension
      run:  mv ./build/miniaudio-macos-x64.dylib ./miniaudio-macos-x64.rebx

    - name: Install Rebol for extension test
      uses: oldes/install-rebol@v3.13.0
      with:
        product: Bulk

    - name: Minimal Rebol/MiniAudio extension test
      run:  ./rebol3 ci-test.r3

    - name: Compress 64bit Rebol/MiniAudio extension
      run:  gzip -9 ./miniaudio-macos-x64.rebx

    - uses: actions/upload-artifact@v3
      with:
        name: Rebol-MiniAudio-CI-${{github.run_id}}
        path: ./*.gz

#  Haiku-x86:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Login to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_HUB_USERNAME }}
#          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
#
#      - name: Download Haiku Rebol-dev container
#        run: docker pull docker.io/oldes/rebol-dev:haiku-x86
#
#      - name: Build all Rebol/MiniAudio for Haiku OS x86
#        run: docker run --rm -v $PWD:/siskin oldes/rebol-dev:haiku-x86 bash -c 'cd /siskin; rebol siskin.r3 Rebol-MiniAudio.nest miniaudio-haiku-x86'
#
#      - name: Compress result before uploading
#        run: |
#          sudo mv ./build/miniaudio-haiku-x86.so ./miniaudio-haiku-x86.rebx
#          sudo gzip -9 ./miniaudio-haiku-x86.rebx
#
#      - uses: actions/upload-artifact@v3
#        with:
#          name: Rebol-MiniAudio-CI-${{github.run_id}}
#          path: ./miniaudio-*.gz
#
#  Haiku-x64:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Login to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_HUB_USERNAME }}
#          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
#
#      - name: Download Haiku Rebol-dev container
#        run: docker pull docker.io/oldes/rebol-dev:haiku-x64
#
#      - name: Build all Rebol/MiniAudio for Haiku OS x64
#        run: docker run --rm -v $PWD:/siskin oldes/rebol-dev:haiku-x64 bash -c 'cd /siskin; rebol siskin.r3 Rebol-MiniAudio.nest miniaudio-haiku-x64'
#
#      - name: Compress result before uploading
#        run: |
#          sudo mv ./build/miniaudio-haiku-x64.so ./miniaudio-haiku-x64.rebx
#          sudo gzip -9 ./miniaudio-haiku-x64.rebx
#
#      - uses: actions/upload-artifact@v3
#        with:
#          name: Rebol-MiniAudio-CI-${{github.run_id}}
#          path: ./miniaudio-*.gz
#
#